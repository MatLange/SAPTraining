CLASS zcl_lan_console_output DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_lan_console_output IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.
    DATA: lt_delete    TYPE TABLE FOR DELETE ZILAN_SFLIGHT.

" Create a data record by calling the BO with EML
     MODIFY ENTITIES OF ZILAN_SFLIGHT
                 ENTITY        Flight
                 CREATE FIELDS (
            Carrid
            Connid
            Fldate
            Price )
            WITH VALUE #( ( %cid = 'DummyKey1'
            Carrid = 'AA'
            Connid = '0815'
            Fldate =  cl_abap_context_info=>get_system_date( ) + 10
            Price =     9999 ) )
                MAPPED DATA(ls_mapped)
                FAILED DATA(ls_failed)
                REPORTED DATA(ls_reported).

" Commit the create and write to database
     COMMIT ENTITIES RESPONSES
     FAILED DATA(commit_failed)
     REPORTED DATA(commit_reported).

    out->write( commit_failed ).
    out->write( commit_reported ).

" Read the created  data record by calling the BO with EML
      READ ENTITY ZILAN_SFLIGHT
            ALL FIELDS WITH VALUE #( (
            %key-Carrid = 'AA'
            %key-Connid = '0815'
            %key-Fldate = cl_abap_context_info=>get_system_date( ) + 10 ) )

      RESULT DATA(LT_NEW_SFLIGHT_RECORDS)
      FAILED DATA(failed)
      REPORTED DATA(reported).


    out->write( LT_NEW_SFLIGHT_RECORDS ).
    out->write( failed ).
    out->write( reported ).


" Delete the created data record by calling the BO with EML
    MOVE-CORRESPONDING LT_NEW_SFLIGHT_RECORDS TO lt_delete.

     MODIFY ENTITIES OF ZILAN_SFLIGHT
                 ENTITY        Flight
                 DELETE FROM lt_delete
                MAPPED DATA(ls_mapped_del)
                FAILED DATA(ls_failed_del)
                REPORTED DATA(ls_reported_del).

    out->write( ls_mapped_del ).
    out->write( ls_failed_del ).
    out->write( ls_reported_del ).

" Commit the delete and write to database
     COMMIT ENTITIES RESPONSES
     FAILED DATA(commit_failed_del)
     REPORTED DATA(commit_reported_del).

    out->write( commit_failed_del ).
    out->write( commit_reported_del ).

  ENDMETHOD.
ENDCLASS.
